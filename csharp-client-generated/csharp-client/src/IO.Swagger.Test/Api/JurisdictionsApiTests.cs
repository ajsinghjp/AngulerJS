/* 
 * WebAPIJourney
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing JurisdictionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class JurisdictionsApiTests
    {
        private JurisdictionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new JurisdictionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of JurisdictionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' JurisdictionsApi
            //Assert.IsInstanceOfType(typeof(JurisdictionsApi), instance, "instance is a JurisdictionsApi");
        }

        
        /// <summary>
        /// Test JurisdictionsDeleteJurisdiction
        /// </summary>
        [Test]
        public void JurisdictionsDeleteJurisdictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.JurisdictionsDeleteJurisdiction(id);
            //Assert.IsInstanceOf<Jurisdiction> (response, "response is Jurisdiction");
        }
        
        /// <summary>
        /// Test JurisdictionsGetJurisdiction
        /// </summary>
        [Test]
        public void JurisdictionsGetJurisdictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.JurisdictionsGetJurisdiction(id);
            //Assert.IsInstanceOf<Jurisdiction> (response, "response is Jurisdiction");
        }
        
        /// <summary>
        /// Test JurisdictionsGetJurisdictions
        /// </summary>
        [Test]
        public void JurisdictionsGetJurisdictionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.JurisdictionsGetJurisdictions();
            //Assert.IsInstanceOf<List<Jurisdiction>> (response, "response is List<Jurisdiction>");
        }
        
        /// <summary>
        /// Test JurisdictionsPostJurisdiction
        /// </summary>
        [Test]
        public void JurisdictionsPostJurisdictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Jurisdiction jurisdiction = null;
            //var response = instance.JurisdictionsPostJurisdiction(jurisdiction);
            //Assert.IsInstanceOf<Jurisdiction> (response, "response is Jurisdiction");
        }
        
        /// <summary>
        /// Test JurisdictionsPutJurisdiction
        /// </summary>
        [Test]
        public void JurisdictionsPutJurisdictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //Jurisdiction jurisdiction = null;
            //instance.JurisdictionsPutJurisdiction(id, jurisdiction);
            
        }
        
    }

}
